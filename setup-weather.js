#!/usr/bin/env node

/**
 * Setup script for Weather Check component
 * This script helps users configure their OpenWeatherMap API key
 */

const fs = require("fs");
const path = require("path");
const readline = require("readline");

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});

console.log("🌤️  Weather Check Setup Script");
console.log("===============================\n");

console.log(
  "This script will help you configure your OpenWeatherMap API key for real-time weather data.\n"
);

async function setupAPIKey() {
  return new Promise((resolve) => {
    rl.question(
      "Enter your OpenWeatherMap API key (get it from https://openweathermap.org/api): ",
      (apiKey) => {
        if (!apiKey || apiKey.trim() === "") {
          console.log("❌ API key cannot be empty. Please try again.");
          return setupAPIKey().then(resolve);
        }

        const envPath = path.join(process.cwd(), ".env");
        const envContent = `# OpenWeatherMap API Configuration
# Generated by setup script on ${new Date().toISOString()}
VITE_OPENWEATHER_API_KEY=${apiKey.trim()}

# Alternative Weather APIs (Optional)
# VITE_WEATHERAPI_KEY=your_weatherapi_key_here
# VITE_TOMORROW_API_KEY=your_tomorrow_api_key_here
`;

        try {
          fs.writeFileSync(envPath, envContent);
          console.log("\n✅ Successfully created .env file with your API key!");
          console.log("📍 File location:", envPath);
          console.log("\n🚀 Next steps:");
          console.log("1. Restart your development server (npm run dev)");
          console.log("2. Navigate to the Weather Check component");
          console.log(
            "3. Search for any Indian city to get real-time weather data"
          );
          console.log("\n🌟 Features available:");
          console.log("• Real-time weather for 100+ Indian cities");
          console.log("• GPS location detection");
          console.log("• 5-day weather forecast");
          console.log("• Smart farming advisories");
          console.log("• Auto-complete city search");
        } catch (error) {
          console.log("❌ Error creating .env file:", error.message);
        }

        resolve();
      }
    );
  });
}

async function checkExistingSetup() {
  const envPath = path.join(process.cwd(), ".env");

  if (fs.existsSync(envPath)) {
    const envContent = fs.readFileSync(envPath, "utf8");
    if (
      envContent.includes("VITE_OPENWEATHER_API_KEY=") &&
      !envContent.includes("your_api_key_here")
    ) {
      console.log("✅ API key is already configured!");
      console.log("📍 File location:", envPath);

      return new Promise((resolve) => {
        rl.question(
          "\nDo you want to update your API key? (y/N): ",
          (answer) => {
            if (
              answer.toLowerCase() === "y" ||
              answer.toLowerCase() === "yes"
            ) {
              resolve(false);
            } else {
              console.log(
                "\n🚀 Your setup is complete! Start the development server with: npm run dev"
              );
              resolve(true);
            }
          }
        );
      });
    }
  }

  return false;
}

async function main() {
  try {
    const isAlreadySetup = await checkExistingSetup();

    if (!isAlreadySetup) {
      await setupAPIKey();
    }
  } catch (error) {
    console.log("❌ Setup failed:", error.message);
  } finally {
    rl.close();
  }
}

// Run the setup
main();
